class Solution {
    public List<List<Integer>> combinationSum(int[] nums, int target) {
       List<Integer>smallList = new ArrayList<>();
       List<List<Integer>>finalList = new ArrayList<>();
       combineSumHelper(nums,target,0,smallList,finalList);
       return finalList;
    }

    static void combineSumHelper(int[] nums, int target , int index , List<Integer>smallList , List<List<Integer>>finalList){
        if(target == 0){
            finalList.add(new ArrayList(smallList));
            return;
        }
        if(target < 0){
            return;
        }
        for(int i=index;i<nums.length;i++){
           
                smallList.add(nums[i]);
                combineSumHelper(nums,target-nums[i],i,smallList,finalList);
                smallList.remove(smallList.size()-1);
            
        }
    }

}
